<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:annotation-config />

	<context:component-scan base-package="com.esinotrans.payment.account" />

	<aop:aspectj-autoproxy />
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="txTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="txManager" />
	</bean>
	
	<bean id="jdbcTemplate"
	    class="org.springframework.jdbc.core.JdbcTemplate"
	    p:dataSource-ref="dataSource"/>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:ibatis-sqlMapConfig.xml">
		</property>
		<property name="dataSource" ref="dataSource">
		</property>
	</bean>

<!-- 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.esinotrans.payment.trade.dao" />
	</bean>
 -->	
	
	<bean id="baseDao" class="org.mybatis.spring.support.SqlSessionDaoSupport"
		abstract="true">
		<property name="sqlSessionFactory">
			<ref bean="sqlSessionFactory" />
		</property>
	</bean>

	<!-- 乐观锁异常重试 拦截器 -->
	<bean id="retryOnOptimistLockExceptionAspect"
		class="com.esinotrans.payment.account.aspect.RetryOnOptimistLockExceptionAspect">
		<property name="retryCounter" value="3" />
		<property name="order" value="100"/>
	</bean>
	<aop:config>
		<aop:aspect id="retryOptimistLockAspect" ref="retryOnOptimistLockExceptionAspect">
			<aop:pointcut id="pointcut"
				expression="execution(* com.esinotrans.payment.account.biz.*Biz.*(..)) and @annotation(com.esinotrans.payment.account.annotation.RetryingTransaction)" />
			<aop:around pointcut-ref="pointcut" method="intercept" />
		</aop:aspect>
	</aop:config>

	<!-- 缓存拦截器
	<bean id="cacheInterceptor" class="com.yeepay.g3.utils.cache.config.CacheInterceptor" /> 
	 -->
	 
	<import resource="classpath:applicationContext-account-dao.xml" />
	<import resource="classpath:applicationContext-account-service.xml" />
	<import resource="classpath:applicationContext-account-biz.xml" />
	<import resource="classpath:account-datasource.xml" />
	<!--
		<import resource="classpath:applicationContext-account-schedual.xml"/>
	-->
</beans>