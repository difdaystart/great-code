<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
    "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.esinotrans.payment.account.dao.AccountDao">
	<resultMap id="accountResultMap" type="Account">
		<id property="id" column="id" />
		<result property="accountNo" column="ACCOUNT_NO" />
		<result property="accountType" column="ACCOUNT_TYPE" />
		<result property="accountStatus" column="STATUS"
			jdbcType="VARCHAR" javaType="com.esinotrans.payment.account.enums.AccountStatusEnum"/>
		<result property="accountStatusCode" column="STATUS_CODE" jdbcType="SMALLINT" />
		<result property="balance" column="BALANCE" javaType="java.math.BigDecimal" />
		<result property="balanceSign" column="BALANCE_SIGN" />
		<result property="customerNo" column="CUSTOMER_NO" />
		<result property="currencyEnum" column="CURRENCY_ENUM"
			jdbcType="VARCHAR" javaType="com.esinotrans.payment.common.enums.CurrencyEnum"/>
		<result property="accountProviderId" column="PROVIDER_ID" />
		<result property="transactionPassword" column="TRADE_PASSWORD" />
		<result property="availableWithdrawQuota" column="WITHDRAW_AMOUNT" javaType="java.math.BigDecimal"/>
		<result property="availableRechargeRefundQuota" column="RECHARGE_REFUND_AMOUNT" javaType="java.math.BigDecimal"/>
		<result property="frozenQuota" column="FREEZE_AMOUNT" javaType="java.math.BigDecimal" />
		<result property="accountHistorySerial" column="ACC_HIS_SERIAL"  />
		<result property="manageSerial" column="MANAGE_SERIAL"  />
		<result property="frozenSerial" column="FROZEN_SERIAL" />
		<result property="version" column="VERSION" />
		<result property="snapshotDate" column="SNAPSHOT_DATE" javaType="java.util.Date"/>
		<result property="createDate" column="CREATE_DATE" javaType="java.util.Date"/>
		<result property="remark" column="REMARK" />
	</resultMap>

	<select id="selectAccountByAccountNo" parameterType="java.util.Map"
		resultMap="accountResultMap">
		SELECT
			a.ACCOUNT_NO,a.ACCOUNT_TYPE,a.CUSTOMER_NO,a.BALANCE,a.BALANCE_SIGN,a.STATUS,a.STATUS_CODE,a.CURRENCY_ENUM,a.PROVIDER_ID,a.TRADE_PASSWORD,
			a.WITHDRAW_AMOUNT,a.RECHARGE_REFUND_AMOUNT,a.FREEZE_AMOUNT,a.ACC_HIS_SERIAL,a.MANAGE_SERIAL,a.FROZEN_SERIAL,a.VERSION,a.SNAPSHOT_DATE,a.CREATE_DATE ,a.REMARK
		FROM TBL_ACCOUNT a 
		WHERE a.ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR} and a.STATUS!=#{accountStatus,jdbcType=VARCHAR} 
		<if test="isPessimist != null and isPessimist == true "> for update</if>
	</select>
	
	<select id="selectAccountByCustomsNo" parameterType="java.util.Map"
		resultMap="accountResultMap">
		SELECT
			a.ACCOUNT_NO,a.ACCOUNT_TYPE,a.CUSTOMER_NO,a.BALANCE,a.BALANCE_SIGN,a.STATUS,a.STATUS_CODE,a.CURRENCY_ENUM,a.PROVIDER_ID,a.TRADE_PASSWORD,
			a.WITHDRAW_AMOUNT,a.RECHARGE_REFUND_AMOUNT,a.FREEZE_AMOUNT,a.ACC_HIS_SERIAL,a.MANAGE_SERIAL,a.FROZEN_SERIAL,a.VERSION,a.SNAPSHOT_DATE,a.CREATE_DATE ,a.REMARK
		FROM TBL_ACCOUNT a 
		WHERE a.CUSTOMER_NO = #{customerNo,jdbcType=VARCHAR} and a.STATUS!=#{accountStatus,jdbcType=VARCHAR}
	</select>
	
	<update id="updateAccountStatus" parameterType="Account" >
		update
		TBL_ACCOUNT a
		set a.status =#{accountStatus,jdbcType=VARCHAR,javaType=com.esinotrans.payment.account.enums.AccountStatusEnum},
		a.STATUS_CODE = #{accountStatusCode},
		a.MANAGE_SERIAL = #{manageSerial},
		a.VERSION = #{version}+1
		where a.account_no = #{accountNo,jdbcType=VARCHAR} and a.VERSION = #{version,jdbcType=BIGINT}
	</update>

	<update id="updateAccountBalance" parameterType="java.util.HashMap">
		update
		TBL_ACCOUNT a
		<set>
			<if test="balance != null"> BALANCE = #{balance},</if>
			<if test="balanceSign != null"> BALANCE_SIGN = #{balanceSign},</if>
			<if test="availableWithdrawQuota != null">WITHDRAW_AMOUNT = #{availableWithdrawQuota},</if>
			<if test="availableRechargeRefundQuota != null">RECHARGE_REFUND_AMOUNT = #{availableRechargeRefundQuota},</if>
			<if test="frozenQuota != null">FREEZE_AMOUNT = #{frozenQuota},</if>
			<if test="accountHistorySerial != null">ACC_HIS_SERIAL = #{accountHistorySerial},</if>
			<if test="snapshotDate != null">SNAPSHOT_DATE = #{snapshotDate},</if>
			<if test="version != null">VERSION = #{version}+1</if>
		</set>
		where a.account_no = #{accountNo,jdbcType=VARCHAR}
		<if test="version != null"> and VERSION = #{version,jdbcType=BIGINT}</if>
	</update>
	
	<update id="updateAccountQuota" parameterType="Account">
		update
		TBL_ACCOUNT a
		<set>
			<if test="availableWithdrawQuota != null">WITHDRAW_AMOUNT = #{availableWithdrawQuota},</if>
			<if test="availableRechargeRefundQuota != null">RECHARGE_REFUND_AMOUNT = #{availableRechargeRefundQuota},</if>
			<if test="frozenQuota != null">FREEZE_AMOUNT = #{frozenQuota},</if>
			<if test="frozenSerial != null">FROZEN_SERIAL = #{frozenSerial},</if>
			<if test="manageSerial != null">MANAGE_SERIAL = #{manageSerial},</if>
			<if test="version != null">VERSION = #{version}+1</if>
		</set>
		where a.account_no = #{accountNo,jdbcType=VARCHAR}
		<if test="version != null"> and VERSION = #{version}</if>
	</update>

	<insert id="insertAccount" parameterType="Account">
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
			SELECT
			SEQ_ACCOUNT_ACCOUNTID.nextVal
			AS
			SERIAL FROM DUAL
		</selectKey>
		insert into TBL_ACCOUNT
		(
			ID, ACCOUNT_NO, ACCOUNT_TYPE,BALANCE, BALANCE_SIGN,CUSTOMER_NO, STATUS, STATUS_CODE, CURRENCY_ENUM, PROVIDER_ID, TRADE_PASSWORD, 
			WITHDRAW_AMOUNT, RECHARGE_REFUND_AMOUNT,FREEZE_AMOUNT, ACC_HIS_SERIAL, MANAGE_SERIAL, FROZEN_SERIAL, VERSION,SNAPSHOT_DATE,CREATE_DATE,REMARK
		)
		values
		(
			#{id,jdbcType=BIGINT},
			#{accountNo,jdbcType=VARCHAR},
			#{accountType,jdbcType=VARCHAR},
			#{balance,jdbcType=DECIMAL},
			#{balanceSign,jdbcType=DECIMAL},
			#{customerNo,jdbcType=VARCHAR},
			#{accountStatus,jdbcType=VARCHAR,javaType=com.esinotrans.payment.account.enums.AccountStatusEnum},
			#{accountStatusCode,jdbcType=SMALLINT},
			#{currencyEnum,jdbcType=VARCHAR,javaType=com.esinotrans.payment.common.enums.CurrencyEnum},
			#{accountProviderId,jdbcType=BIGINT},
			#{transactionPassword,jdbcType=VARCHAR},
			#{availableWithdrawQuota,jdbcType=DECIMAL},
			#{availableRechargeRefundQuota,jdbcType=DECIMAL},
			#{frozenQuota,jdbcType=DECIMAL},
			#{accountHistorySerial,jdbcType=BIGINT},
			#{manageSerial,jdbcType=BIGINT},
			#{frozenSerial,jdbcType=BIGINT},
			#{version,jdbcType=BIGINT},
			#{snapshotDate,jdbcType=TIMESTAMP},
			#{createDate,jdbcType=TIMESTAMP},
			#{remark,jdbcType=VARCHAR}
		)
	</insert>

</mapper>
